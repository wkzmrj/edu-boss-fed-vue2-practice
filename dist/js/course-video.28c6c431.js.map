{"version":3,"file":"js/course-video.28c6c431.js","mappings":"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","sources":["webpack://edu-boss-fed-vue2/./src/views/course/video.vue","webpack://edu-boss-fed-vue2/./src/services/aliyun-upload.js","webpack://edu-boss-fed-vue2/src/views/course/video.vue","webpack://edu-boss-fed-vue2/./src/views/course/video.vue?4188","webpack://edu-boss-fed-vue2/./src/views/course/video.vue?c1cc"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"course-video\"},[_c('el-card',[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\" 课程相关信息 \")]),_c('el-form',[_c('el-form-item',{attrs:{\"label\":\"视频上传\"}},[_c('input',{ref:\"video-file\",attrs:{\"type\":\"file\"}})]),_c('el-form-item',{attrs:{\"label\":\"封面上传\"}},[_c('input',{ref:\"image-file\",attrs:{\"type\":\"file\"}})]),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleUpload}},[_vm._v(\"开始上传\")]),_c('el-button',{on:{\"click\":function($event){return _vm.$router.push({\n            name: 'course-section',\n            params: {\n              courseId: _vm.courseId\n            }\n          })}}},[_vm._v(\"返回\")])],1),_c('el-form-item',[(_vm.uploadPercent !== 0)?_c('p',[_vm._v(\"视频上传中: \"+_vm._s(_vm.uploadPercent)+\"%\")]):_vm._e(),(_vm.isUploadSuccess)?_c('p',[_vm._v(\"视频转码中：\"+_vm._s(_vm.isTranscodeSuccess ? '完成': '正在转码中...'))]):_vm._e()])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from '@/utils/request'\n\n// 获取阿里云图片上传凭证和地址\nexport const aliyunImageUploadAddressAndAuth = () => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/upload/aliyunImagUploadAddressAdnAuth.json'\n  })\n}\n\n// 获取阿里云视频上传凭证和地址\nexport const aliyunVideoUploadAddressAndAuth = params => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/upload/aliyunVideoUploadAddressAdnAuth.json',\n    params\n  })\n}\n\n// 阿里云转码请求\nexport const aliyunVideoTranscode = data => {\n  return request({\n    method: 'POST',\n    url: '/boss/course/upload/aliyunTransCode.json',\n    data\n  })\n}\n\n// 阿里云转码进度\nexport const getAliyunTranscodePercent = lessonId => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/upload/aliyunTransCodePercent.json',\n    params: {\n      lessonId\n    }\n  })\n}\n","<template>\n  <div class=\"course-video\">\n    <el-card>\n      <div slot=\"header\">\n        课程相关信息\n      </div>\n      <el-form>\n        <el-form-item label=\"视频上传\">\n          <input type=\"file\" ref=\"video-file\">\n        </el-form-item>\n        <el-form-item label=\"封面上传\">\n          <input type=\"file\" ref=\"image-file\">\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            @click=\"handleUpload\"\n          >开始上传</el-button>\n          <el-button\n            @click=\"$router.push({\n              name: 'course-section',\n              params: {\n                courseId\n              }\n            })\"\n          >返回</el-button>\n        </el-form-item>\n        <el-form-item>\n          <p v-if=\"uploadPercent !== 0\">视频上传中: {{ uploadPercent }}%</p>\n          <p v-if=\"isUploadSuccess\">视频转码中：{{ isTranscodeSuccess ? '完成': '正在转码中...' }}</p>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  aliyunImageUploadAddressAndAuth,\n  aliyunVideoUploadAddressAndAuth,\n  aliyunVideoTranscode,\n  getAliyunTranscodePercent\n} from '@/services/aliyun-upload'\n\nexport default {\n  name: 'CourseVideo',\n  props: {\n    courseId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data () {\n    return {\n      // 图片上传后的地址，用于视频上传凭证请求\n      imageURL: '',\n      // 保存上传实例\n      uploader: null,\n      // 保存上传视频的 ID\n      videoId: null,\n      // 上传百分比\n      uploadPercent: 0,\n      // 上传完毕状态\n      isUploadSuccess: false,\n      // 转码完毕状态\n      isTranscodeSuccess: false\n    }\n  },\n  created () {\n    this.initUploader()\n  },\n  methods: {\n    handleUpload () {\n      // 考虑到可能重复使用某个组件进行上传处理，点击上传时，将数据重置\n      this.uploadPercent = 0\n      this.isUploadSuccess = false\n      this.isTranscodeSuccess = false\n      const videoFile = this.$refs['video-file'].files[0]\n      const imageFile = this.$refs['image-file'].files[0]\n      const uploader = this.uploader\n      // 将要上传的文件添加到上传列表中\n      uploader.addFile(imageFile)\n      uploader.addFile(videoFile)\n      // 开始上传\n      uploader.startUpload()\n    },\n    initUploader () {\n      this.uploader = new window.AliyunUpload.Vod({\n        // 阿里账号ID，必须有值\n        userId: '1618139964448548',\n        // 上传到视频点播的地域，默认值为'cn-shanghai'，//eu-central-1，ap-southeast-1\n        region: '',\n        // 分片大小默认1 MB，不能小于100 KB\n        partSize: 1048576,\n        // 并行上传分片个数，默认5\n        parallel: 5,\n        // 网络原因失败时，重新上传次数，默认为3\n        retryCount: 3,\n        // 网络原因失败时，重新上传间隔时间，默认为2秒\n        retryDuration: 2,\n        // 开始上传\n        onUploadstarted: async uploadInfo => {\n          let uploadAddressAndAuth = null\n          // 检测是图片或视频\n          if (uploadInfo.isImage) {\n            // 图片处理\n            const { data } = await aliyunImageUploadAddressAndAuth()\n            if (data.code === '000000') {\n              uploadAddressAndAuth = data.data\n              this.imageURL = uploadAddressAndAuth.imageURL\n            }\n          } else {\n            // 视频处理\n            const { data } = await aliyunVideoUploadAddressAndAuth({\n              fileName: uploadInfo.file.name,\n              imageUrl: this.imageURL\n            })\n            if (data.code === '000000') {\n              uploadAddressAndAuth = data.data\n              this.videoId = data.data.videoId\n            }\n          }\n          // 设置凭证与地址\n          this.uploader.setUploadAuthAndAddress(\n            uploadInfo,\n            uploadAddressAndAuth.uploadAuth,\n            uploadAddressAndAuth.uploadAddress,\n            uploadAddressAndAuth.imageId || uploadAddressAndAuth.videoId\n          )\n          // 此步设置完毕，上传进度开始执行\n        },\n        // 文件上传成功\n        onUploadSucceed: function (uploadInfo) {\n        },\n        // 文件上传失败\n        onUploadFailed: function (uploadInfo, code, message) {\n        },\n        // 文件上传进度，单位：字节\n        onUploadProgress: (uploadInfo, totalSize, loadedPercent) => {\n          if (!uploadInfo.isImage) {\n            this.uploadPercent = Math.floor(loadedPercent * 100)\n          }\n        },\n        // 上传凭证超时\n        onUploadTokenExpired: function (uploadInfo) {\n        },\n        // 全部文件上传结束\n        onUploadEnd: async uploadInfo => {\n          this.isUploadSuccess = true\n          const lessonId = this.$route.query.lessonId\n          // 发送视频转码请求\n          const { data } = await aliyunVideoTranscode({\n            lessonId,\n            coverImageUrl: this.imageURL,\n            fileId: this.videoId,\n            fileName: this.$refs['video-file'].files[0].name\n          })\n          if (data.code === '000000') {\n            // 轮询转码进度\n            const timer = setInterval(async () => {\n              const { data } = await getAliyunTranscodePercent(lessonId)\n              if (data.code === '000000') {\n                if (data.data === 100) {\n                  this.isTranscodeSuccess = true\n                  this.$message.success('视频转码成功')\n                  clearInterval(timer)\n                }\n              }\n            }, 1000)\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./video.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./video.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./video.vue?vue&type=template&id=5aa2220d&scoped=true&\"\nimport script from \"./video.vue?vue&type=script&lang=js&\"\nexport * from \"./video.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5aa2220d\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","ref","on","handleUpload","$event","$router","push","name","params","courseId","uploadPercent","_s","_e","isUploadSuccess","isTranscodeSuccess","staticRenderFns","aliyunImageUploadAddressAndAuth","request","method","url","aliyunVideoUploadAddressAndAuth","aliyunVideoTranscode","data","getAliyunTranscodePercent","lessonId","props","type","required","imageURL","uploader","videoId","created","methods","initUploader","userId","region","partSize","parallel","retryCount","retryDuration","onUploadstarted","uploadAddressAndAuth","fileName","imageUrl","uploadInfo","onUploadSucceed","onUploadFailed","onUploadProgress","onUploadTokenExpired","onUploadEnd","coverImageUrl","fileId","clearInterval","component"],"sourceRoot":""}