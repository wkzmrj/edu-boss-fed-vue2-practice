{"version":3,"file":"js/alloc-menu.ed2bdbe1.js","mappings":"8KAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,UAAU,CAACA,EAAG,UAAU,CAACG,IAAI,YAAYC,MAAM,CAAC,WAAW,KAAK,KAAON,EAAIO,MAAM,MAAQP,EAAIQ,aAAa,uBAAuBR,EAAIS,YAAY,gBAAgB,GAAG,qBAAqB,MAAMP,EAAG,MAAM,CAACQ,YAAY,CAAC,OAAS,SAAS,CAACR,EAAG,YAAY,CAACS,GAAG,CAAC,MAAQX,EAAIY,UAAU,CAACZ,EAAIa,GAAG,QAAQX,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,WAAWK,GAAG,CAAC,MAAQX,EAAIc,SAAS,CAACd,EAAIa,GAAG,SAAS,IAAI,IAAI,EACxe,EACGE,EAAkB,G,oBCyBtB,GACAC,KAAAA,YACAC,MAAAA,CACAC,OAAAA,CACAC,KAAAA,CAAAA,OAAAA,QACAC,UAAAA,IAGAC,UACA,iBACA,oBACA,EACAC,OACA,OACAf,MAAAA,GACAC,aAAAA,CACAe,SAAAA,cACAC,MAAAA,QAEAf,YAAAA,GAEA,EACAgB,QAAAA,CACAb,UACA,0CACA,EACAc,eAAAA,GACAnB,EAAAA,SAAAA,IACA,cAGA,qBACA,wCAEA,+CAEA,EACA,sBACA,WAAAe,SAAA,qBACA,mBACA,2BAEA,EACA,eACA,WAAAA,SAAA,SACAJ,OAAAA,KAAAA,OACAS,WAAAA,KAAAA,MAAAA,aAAAA,mBAEA,oBACA,gCACA,mBACAX,KAAAA,SAGA,EACA,kBACA,WAAAM,SAAA,UACA,oBACA,kBAEA,ICvFmQ,I,UCO/PM,GAAY,OACd,EACA7B,EACAgB,GACA,EACA,KACA,WACA,MAIF,EAAea,EAAiB,O,sNChBzB,MAAMC,EAAkB,CAACC,GAAK,KAC5BC,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,6BACLC,OAAQ,CACNJ,QAKOK,EAAqBb,IACzBS,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,OACRC,IAAK,0BACLX,SAKSc,EAAcd,IAClBS,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,qBAIII,EAAaP,IACjBC,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,SACRC,IAAM,cAAaH,MAKVQ,EAAkB,KACtBP,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,+BAKIM,EAAoBjB,IACxBS,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,OACRC,IAAK,+BACLX,SAKSkB,EAAetB,IACnBa,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,0BACLC,OAAQ,CACNhB,W","sources":["webpack://edu-boss-fed-vue2/./src/views/role/alloc-menu.vue","webpack://edu-boss-fed-vue2/src/views/role/alloc-menu.vue","webpack://edu-boss-fed-vue2/./src/views/role/alloc-menu.vue?efb9","webpack://edu-boss-fed-vue2/./src/views/role/alloc-menu.vue?1349","webpack://edu-boss-fed-vue2/./src/services/menu.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"alloc-menu\"},[_c('el-card',[_c('el-tree',{ref:\"menu-tree\",attrs:{\"node-key\":\"id\",\"data\":_vm.menus,\"props\":_vm.defaultProps,\"default-checked-keys\":_vm.checkedKeys,\"show-checkbox\":\"\",\"default-expand-all\":\"\"}}),_c('div',{staticStyle:{\"margin\":\"20px\"}},[_c('el-button',{on:{\"click\":_vm.onReset}},[_vm._v(\"清空\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSave}},[_vm._v(\"保存\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"alloc-menu\">\n    <el-card>\n      <el-tree\n        ref=\"menu-tree\"\n        node-key=\"id\"\n        :data=\"menus\"\n        :props=\"defaultProps\"\n        :default-checked-keys=\"checkedKeys\"\n        show-checkbox\n        default-expand-all\n      ></el-tree>\n      <div style=\"margin: 20px;\">\n        <el-button\n          @click=\"onReset\"\n        >清空</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"onSave\"\n        >保存</el-button>\n      </div>\n    </el-card>\n    </div>\n</template>\n\n<script>\nimport { getMenuNodeList, allocateRoleMenus, getRoleMenus } from '@/services/menu'\nexport default {\n  name: 'AllocMenu',\n  props: {\n    roleId: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  created () {\n    this.loadMenus()\n    this.loadRoleMenus()\n  },\n  data () {\n    return {\n      menus: [],\n      defaultProps: {\n        children: 'subMenuList',\n        label: 'name'\n      },\n      checkedKeys: []\n    }\n  },\n  methods: {\n    onReset () {\n      this.$refs['menu-tree'].setCheckedKeys([])\n    },\n    getCheckedKeys (menus) {\n      menus.forEach(menu => {\n        if (!menu.selected) {\n          return\n        }\n        if (menu.subMenuList) {\n          return this.getCheckedKeys(menu.subMenuList)\n        }\n        this.checkedKeys = [...this.checkedKeys, menu.id]\n      })\n    },\n    async loadRoleMenus () {\n      const { data } = await getRoleMenus(this.roleId)\n      if (data.code === '000000') {\n        this.getCheckedKeys(data.data)\n      }\n    },\n    async onSave () {\n      const { data } = await allocateRoleMenus({\n        roleId: this.roleId,\n        menuIdList: this.$refs['menu-tree'].getCheckedKeys()\n      })\n      if (data.code === '000000') {\n        this.$message.success('分配菜单成功')\n        this.$router.push({\n          name: 'role'\n        })\n      }\n    },\n    async loadMenus () {\n      const { data } = await getMenuNodeList()\n      if (data.code === '000000') {\n        this.menus = data.data\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./alloc-menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./alloc-menu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./alloc-menu.vue?vue&type=template&id=11ffccac&scoped=true&\"\nimport script from \"./alloc-menu.vue?vue&type=script&lang=js&\"\nexport * from \"./alloc-menu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"11ffccac\",\n  null\n  \n)\n\nexport default component.exports","import request from '@/utils/request'\n\nexport const getEditMenuInfo = (id = -1) => {\n  return request({\n    method: 'GET',\n    url: '/boss/menu/getEditMenuInfo',\n    params: {\n      id\n    }\n  })\n}\n// 添加菜单接口\nexport const createOrUpdateMenu = data => {\n  return request({\n    method: 'POST',\n    url: '/boss/menu/saveOrUpdate',\n    data\n  })\n}\n\n// 获取所有数据\nexport const getAllMenus = data => {\n  return request({\n    method: 'GET',\n    url: 'boss/menu/getAll'\n  })\n}\n// 删除菜单接口\nexport const deleteMenu = id => {\n  return request({\n    method: 'DELETE',\n    url: `/boss/menu/${id}`\n  })\n}\n\n// 获取所有菜单并按层级展示\nexport const getMenuNodeList = () => {\n  return request({\n    method: 'GET',\n    url: '/boss/menu/getMenuNodeList'\n  })\n}\n\n// 给角色分配菜单\nexport const allocateRoleMenus = data => {\n  return request({\n    method: 'POST',\n    url: '/boss/menu/allocateRoleMenus',\n    data\n  })\n}\n\n// 获取当前角色拥有的菜单列表接口\nexport const getRoleMenus = roleId => {\n  return request({\n    method: 'GET',\n    url: '/boss/menu/getRoleMenus',\n    params: {\n      roleId\n    }\n  })\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","menus","defaultProps","checkedKeys","staticStyle","on","onReset","_v","onSave","staticRenderFns","name","props","roleId","type","required","created","data","children","label","methods","getCheckedKeys","menuIdList","component","getEditMenuInfo","id","request","method","url","params","createOrUpdateMenu","getAllMenus","deleteMenu","getMenuNodeList","allocateRoleMenus","getRoleMenus"],"sourceRoot":""}